name: github-action-demo # 工作流名称
on:
  push:
    branches:
      - develop # 生效分支
jobs:
  first-github-job: # 任务名称 自定义
    runs-on: ubuntu-latest # 运行环境
    steps:
      - name: Checkout
        uses: actions/checkout@v3 #复用的 action 会把仓库代码检出到 runner 中。

      - name: Use Node.js
        uses: actions/setup-node@v3 # 设置nodejs版本号
        with:
          node-versions: "14.19.1"
      - run: |
          pwd
          ls -la
          echo "==="

      # 压缩项目
      - name: Build project
        run: zip -vr my-artifact ./**

      # 读取package.json的值
      - name: Read Version
        id: version
        uses: ashley-taylor/read-json-property-action@v1.0
        with:
          path: ./package.json
          property: version

      # 发布 Release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: v${{steps.version.outputs.value}}
          release_name: v${{steps.version.outputs.value}}
          draft: false
          prerelease: false

      # 上传构建结果到 Release
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./my-artifact.zip
          asset_name: my-artifact.zip
          asset_content_type: application/zip

      # 把文件上传到服务器
      - name: Upload to Deploy Server
        uses: easingthemes/ssh-deploy@main
        env:
          # SSH_PRIVATE_KEY为准备工作步骤三中生成密钥对里的私钥
          SSH_PRIVATE_KEY: ${{ secrets.DEPLOY_TOKEN }}
          # 指定当前目录中要上传的内容
          SOURCE: "./**"
          # 指定上传到部署机器的哪个目录下
          TARGET: "/apps/koa-koa"
          # 上传前指令，此处用于清空TARGET下的文件
          ARGS: "-avzr --delete"
          # REMOTE_HOST为机器的公网IP
          REMOTE_HOST: ${{ secrets.HOST }}
          # REMOTE_USER 为登录机器时用到账号名
          REMOTE_USER: ${{secrets.USERNAME}}
          SCRIPT_AFTER: |
            pwd
            whoami
            npm install --production
            pm2 reload koatest.json

      # 部署服务器
      # - name: connect host
      #   uses: appleboy/ssh-action@v0.1.10 # 使用ssh链接服务器
      #   with:
      #     host: ${{ secrets.HOST }}
      #     username: ${{ secrets.USERNAME }}
      #     password: ${{ secrets.PASSWORD }}
      #     port: ${{ secrets.PORT }}
      #     script: |
      #       cd /apps/
      #       pwd
      #       wget https://github.com/yi-xiaobai/koa-koa/releases/latest/download/my-artifact.zip -O my-artifact.zip
      #       tar -zxvf my-artifact.zip
      #       npm install --production
      #       pm2 reload koatest.json
