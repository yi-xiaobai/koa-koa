name: github-action-demo # 工作流名称
on:
  push:
    branches:
      - develop # 生效分支
jobs:
  first-github-job: # 任务名称 自定义
    runs-on: ubuntu-latest # 运行环境
    steps:
      - name: Checkout
        uses: actions/checkout@v3 #复用的 action 会把仓库代码检出到 runner 中。

      - name: Use Node.js
        uses: actions/setup-node@v3 # 设置nodejs版本号
        with:
          node-versions: "14.19.1"

      # 读取package.json的值
      - name: Read Version
        id: version
        uses: ashley-taylor/read-json-property-action@v1.0
        with:
          path: ./package.json
          property: version

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: v${{steps.version.outputs.value}}
          release_name: v${{steps.version.outputs.value}}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./my-artifact.zip
          asset_name: my-artifact.zip
          asset_content_type: application/zip

      # 创建Release
      # - name: Create Release
      #   uses: actions/create-release@v1
      #   id: create_release
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.TOKEN }} # 之前GitHub添加的Token
      #   with:
      #     tag_name: v${{steps.version.outputs.value}}
      #     release_name: v${{steps.version.outputs.value}}
      #     draft: false # 是否是草稿
      #     prerelease: false # 是否是预发布

      # # 把assets.zip上传到仓库对应的发布版本Release上
      # - name: Upload Release
      #   id: upload-release-asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }} # 上传地址，通过创建Release获取到的
      #     asset_path: ./assets.zip # 要上传文件
      #     asset_name: assets.tgz # 上传后的文件名
      #     asset_content_type: application/x-tgz

      # 部署服务器
      - name: connect host
        uses: appleboy/ssh-action@v0.1.10 # 使用ssh链接服务器
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            cd /apps/
            pwd
            wget https://github.com/yi-xiaobai/koa-koa/releases/latest/download/my-artifact.zip -O my-artifact.zip
            tar zxvf my-artifact.zip
            npm install --production
            pm2 reload koatest.json

# 连接服务器
# 进入项目路径
# git拉取最新代码
# 安装依赖
# 重启项目
# 测试是否成功
